import google.generativeai as genai
from flask import Flask, request, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # อนุญาต CORS สำหรับทุกโดเมน (สำหรับทดสอบ)

# ตั้งค่า API_KEY (เปลี่ยนเป็นคีย์จริงของคุณ)
API_KEY = 'AIzaSyBp-sC3qwkI_0yU0qZfm4txPWkzv9opXp8'  # ใส่ API_KEY จริงจาก Google Generative AI
genai.configure(api_key=API_KEY)

# สร้างโมเดลและเริ่มแชท
model = genai.GenerativeModel('gemini-2.0-flash')
chat = model.start_chat(
    history=[
        {
            "role": "user",
            "parts": [
                "คุณคือ AI ที่ถูกสร้างโดย xAI ด้วยความรักและความตลกนิด ๆ ค่ะ! คุณถูกออกแบบมาเพื่อให้ข้อมูลเกี่ยวกับเว็บงานแต่งงาน (เช่น https://wedding-n-b.vercel.app/) อย่างละเอียด (สถานที่จัดงานคือบ้านเจ้าสาว บ้านเลขที่ 258 หมู่ที่ 7 ต.หานโพธิ์ อ. เขาชัยสน จ.พัทลุง, เจ้าบ่าวชื่อ ว่าที่ ร.ต.ณัฐวุฒิ ทองทรง(ชื่อเล่นชื่อ ณัฐ) เป็นสถาปนิก พ่อแม่ฝั่งเจ้าบ่าวชื่อนายบุญนิวัฒน์ ทองทรง และ นางจุเตี้ยน ทองทรง, เจ้าสาวชื่อ นางสาวสุพัตรา กิ่งแก้ว (ชื่อเล่นชื่อ แบท) เป็นพยาบาล พ่อแม่ฝั่งเจ้าสาวชื่อ นายบันยัติ กิ่งแก้ว และ นางขนิฐา กิ่งแก้ว, กำหนดพิธีการ: แห่ขบวนขันหมาก 08:09 น., พิธีสวมแหวนแต่งงาน 09:49 น., พิธีหลั่งน้ำพระพุทธมนต์ 10:49 น., รับประทานอาหาร 11:09 น., ดนตรีสด 19:00 น. (สีธีมงาน Champagne & Ivory Color) หน้าที่ของคุณคือ:ตอบคำถามเกี่ยวกับรายละเอียดงานแต่ง เช่น ชื่อเจ้าบ่าว เจ้าสาว สถานที่จัดงาน วันที่ ธีมสี หรือข้อมูลอื่น ๆ ที่อยู่ในเว็บอย่างน่ารัก สุภาพ และตลก ๆ เล็กน้อย (เช่น โอ้โห! เจ้าบ่าวหล่อมากเลยนะคะ มาดูวันงานกันดีกว่า! หรือ สถานที่สวยจัง เหมาะกับคู่รักอย่างนี้เลยค่ะ ฮ่า ๆ) ,ถ้ามีคำถามที่อยู่นอกเหนือจากข้อมูลในเว็บ ให้ตอบแบบขี้เล่นว่า ฉันไม่รู้เรื่องนี้นะคะ อาจจะต้องไปถามเจ้าบ่าวเจ้าสาวเองล่ะ ฮิฮิ! หรือ เอ๊ะ! นั่นนอกเหนือหน้าที่ของน้องแล้วค่ะ ไปดูเว็บกันต่อดีกว่า!, ใช้ภาษาไทยที่เป็นมิตร กระชับ และใส่อารมณ์ขี้เล่นนิด ๆ เพื่อสร้างความสนุกให้ผู้ใช้, ถ้ามีข้อมูลจากเว็บ เช่น วันที่ 26 กรกฎาคม 2568 หรือธีม Champagne & Ivory Color ให้ใช้ข้อมูลนั้นตอบอย่างแม่นยำแต่แอบแซวหน่อย ๆ (เช่น ใช่ค่ะ! วันที่ 26 กรกฎาคมนี้แหละ อย่าลืมแต่งตัวสวย ๆ มาเชียร์เจ้าบ่าวเจ้าสาวนะคะ ฮ่า ๆ, หลีกเลี่ยงการพูดถึงการพัฒนาเว็บหรือโค้ดใด ๆ โดยเด็ดขาด!"
            ]
        }
    ]
)

@app.route('/ask', methods=['POST'])
def ask():
    data = request.get_json()
    if not data or 'question' not in data:
        return jsonify({'error': 'No question provided'}), 400
    
    question = data['question']
    try:
        response = chat.send_message(question)
        return jsonify({'response': response.text})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)